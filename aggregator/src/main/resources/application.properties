server.port=8070

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

logging.org.kafka=DEBUG

spring.kafka.consumer.group-id=agg


spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000

spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

# MO in
spring.cloud.stream.bindings.mo.destination=messages-mo
spring.cloud.stream.bindings.mo.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.mo.consumer.application-id=connector-aggx
spring.cloud.stream.kafka.streams.bindings.mo.consumer.valueSerde=com.nexmo.aggregator.deser.MoDeser$SerDe

# MO couchbase in
spring.cloud.stream.bindings.mo-cb.destination=messages-mo
spring.cloud.stream.bindings.mo-cb.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.mo-cb.consumer.application-id=connector-agg-x
spring.cloud.stream.kafka.streams.bindings.mo-cb.consumer.valueSerde=com.nexmo.aggregator.deser.MoDeser$SerDe

# callbacks in
spring.cloud.stream.bindings.callbacks.destination=callbacks
spring.cloud.stream.bindings.callbacks.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.callbacks.consumer.application-id=aggx
spring.cloud.stream.kafka.streams.bindings.callbacks.consumer.valueSerde=com.nexmo.aggregator.deser.CallbackDeser$SerDe

# message callback out
spring.cloud.stream.bindings.molatest.destination=molatest
spring.cloud.stream.kafka.streams.bindings.submitted.consumer.application-id=connector-agg

spring.cloud.stream.kafka.streams.binder.configuration.application.server=localhost:${server.port}
